#include <iostream>
#include <conio.h> //getch()?? kbhit() ??? ???
#include <ctime> //clock() ??? ???

using namespace std;

#define ESC 27 //???? ????
#define LEFT 75 //???? ???? ? ASCII??
#define RIGHT 77 // ?????? ???? ? ASCII??
#define DOWN 80 //??? ???? ? ASCII??
#define UP 72 //???? ???? ? ASCII??

#define MDIM 4 //4x4 ??????? ???
#define PDIM 7 //7x7 ?????? ???


//???? Map ????? ???? ???: ??????? ??? ????? ?????? ?? ???? 
#define MAP_STARTX 20 
#define MAP_STARTY 2

//??? ??? ?? ???©£? ??? ???: ??????? ??? ????? ?????? ?? ???? 
#define SCORE_STARTX 20
#define SCORE_STARTY 30

static int numPat[16][7][7]=
{
{2,2,2,2,2,2,2,
 2,0,0,0,0,0,2,
 2,0,0,0,0,0,2,
 2,0,0,0,0,0,2,
 2,0,0,0,0,0,2,
 2,0,0,0,0,0,2,
 2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,
 2,0,0,1,0,0,2,
 2,0,0,1,0,0,2,
 2,0,0,1,0,0,2,
 2,0,0,1,0,0,2,
 2,0,0,1,0,0,2,
 2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,
 2,0,1,1,1,0,2,
 2,0,0,0,1,0,2,
 2,0,1,1,1,0,2,
 2,0,1,0,0,0,2,
 2,0,1,1,1,0,2,
 2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,
 2,0,1,1,1,0,2,
 2,0,0,0,1,0,2,
 2,0,1,1,1,0,2,
 2,0,0,0,1,0,2,
 2,0,1,1,1,0,2,
 2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,
 2,0,1,0,1,0,2,
 2,0,1,0,1,0,2,
 2,0,1,1,1,0,2,
 2,0,0,0,1,0,2,
 2,0,0,0,1,0,2,
 2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,
 2,0,1,1,1,0,2,
 2,0,1,0,0,0,2,
 2,0,1,1,1,0,2,
 2,0,0,0,1,0,2,
 2,0,1,1,1,0,2,
 2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,
 2,0,1,0,0,0,2,
 2,0,1,0,0,0,2,
 2,0,1,1,1,0,2,
 2,0,1,0,1,0,2,
 2,0,1,1,1,0,2,
 2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,
 2,0,1,1,1,0,2,
 2,0,0,0,1,0,2,
 2,0,0,0,1,0,2,
 2,0,0,0,1,0,2,
 2,0,0,0,1,0,2,
 2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,
 2,0,1,1,1,0,2,
 2,0,1,0,1,0,2,
 2,0,1,1,1,0,2,
 2,0,1,0,1,0,2,
 2,0,1,1,1,0,2,
 2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,
 2,0,1,1,1,0,2,
 2,0,1,0,1,0,2,
 2,0,1,1,1,0,2,
 2,0,0,0,1,0,2,
 2,0,0,0,1,0,2,
 2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,
 2,1,0,1,1,1,2,
 2,1,0,1,0,1,2,
 2,1,0,1,0,1,2,
 2,1,0,1,0,1,2,
 2,1,0,1,1,1,2,
 2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,
 2,1,0,0,1,0,2,
 2,1,0,0,1,0,2,
 2,1,0,0,1,0,2,
 2,1,0,0,1,0,2,
 2,1,0,0,1,0,2,
 2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,
 2,1,0,1,1,1,2,
 2,1,0,0,0,1,2,
 2,1,0,1,1,1,2,
 2,1,0,1,0,0,2,
 2,1,0,1,1,1,2,
 2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,
 2,1,0,1,1,1,2,
 2,1,0,0,0,1,2,
 2,1,0,1,1,1,2,
 2,1,0,0,0,1,2,
 2,1,0,1,1,1,2,
 2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,
 2,1,0,1,0,1,2,
 2,1,0,1,0,1,2,
 2,1,0,1,1,1,2,
 2,1,0,0,0,1,2,
 2,1,0,0,0,1,2,
 2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,
 2,1,0,1,1,1,2,
 2,1,0,1,0,0,2,
 2,1,0,1,1,1,2,
 2,1,0,0,0,1,2,
 2,1,0,1,1,1,2,
 2,2,2,2,2,2,2}
};

enum COMMAND {Stop=0, Left, Right, Down, Up, Non};

class puzzleGame
{
public:
	    
		puzzleGame(void); //???? ???; ????? ????????? ?????
		void gameDraw(void); // ???? ??? ??????, ?©£? ??????; MAP_STARTX, MAP_STARTY ????? ??????? ??? ???? ???(gotoXY??? ??»× ???????? ????????? ?????
		void puzzleDraw(int (*puzzle)[PDIM], int x, int y);//
		void puzzleMove(int moveKey); //???? ??? ???; ????? ??????? ?????
		void shuffle(int num);//???? ?? ????; 50? ?????? ???, ????? ???? ??? ?? ?? ????
		void getCommand(void);//??? ?????? ?? ????? ???? ESC??? ?????????? ???? 0?? ???
                             // ??????? ?????? ???? ??? ????? ???(LEFT, RIGHT, DOWN, UP)
                             //????? ??????? ????? ????? ?? ????
		int getAction(void)	{ return action;};
private:
	   int map[MDIM][MDIM];
       int action;
	   int x,y; //????? ???
	   int moveNum; //??????
	   clock_t sTime; //???? ?©£?
	   clock_t cTime; //???? ?©£?
};

void gotoXY(int x, int y); //??? ????? ¨¨???? ??? ????? ???
int getDirectKey();

int main(void)
{
	puzzleGame gameBot;
	gameBot.shuffle(50);
	gameBot.gameDraw();
	gameBot.getCommand();
    while(gameBot.getAction())
	{
	  gameBot.puzzleMove(gameBot.getAction());
	  gameBot.gameDraw(); 
	  gameBot.getCommand();
	}

	cout << "The game is over!!" << endl;
	return 0;
}

puzzleGame::puzzleGame()
{

	//???? ???? ??? ???
	
}


void puzzleGame::puzzleDraw(int (*puzzle)[PDIM], int x, int y)
{
	for(int i=0;i< PDIM ; i++)
	{
	  gotoXY(x,y+i);
	  for(int j=0; j< PDIM; j++)
		{
			if(puzzle[i][j] == 0)
				cout << "  ";
			else if(puzzle[i][j] == 1)
				cout << "??";
			else
				cout << "??";
		
		}
	}
}

void puzzleGame::gameDraw(void)
{
	gotoXY(MAP_STARTX, MAP_STARTY);
	cout << "   Fifteen Puzzle" << endl;
	
	for(int i=0; i< MDIM; i++)
	{   
		for(int j=0; j< MDIM; j++)
		{

			//???? puzzleDraw ??? ?????

		}
	}

	cout << endl;
	gotoXY(  SCORE_STARTX, SCORE_STARTY);
	cout << "  ??? ???: " << moveNum << endl;
	gotoXY(  SCORE_STARTX, SCORE_STARTY+1);
	cTime = clock();
	cout << "  ??? ?©£?: " << (cTime-sTime)/1000.0 << "??" << endl;
}



void puzzleGame::puzzleMove(int moveKey)
{
	~
    ~
	~
}

void puzzleGame::getCommand(void)
{
	~
	~
	~
}

//??? ????? ¨¨???? ??? ????? ???
void gotoXY(int x, int y) 
{
 COORD Pos = {x, y};
 SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), Pos);
}


int getDirectKey()
{
	char key=Non;
    if(_kbhit()!= 0) //????? ???????? ?????
	{
	  //??? ??? ?????? ?? ????? 2Byte?? ?????, ???¡Æ ???? 224???? ?????? ?¥é?¡Æ ???? ?????? ???? ???
	  //??? ??? ?????? ???? 2???? getch()????? ?????? ??
		key = getch();
		if(key==224) key=_getch();
	}
	return key;
} 
